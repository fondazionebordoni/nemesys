"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""
import os
import re

import sys
from setuptools import setup


def get_version():
    try:
        f = open('common/_generated_version.py')
    except EnvironmentError:
        return None
    ver = None
    for line in f.readlines():
        mo = re.match("__version__ = '([^']+)'", line)
        if mo:
            ver = mo.group(1)
            break
    sub_iceberg_file(os.path.join('iceberg', 'nemesys_iceberg.packproj'), ver)
    return ver


def sub_iceberg_file(f, ver):
    # Fix version in Inno Setup file too!
    with open(f, 'r') as fd:
        filedata = fd.read()

    # Replace the target string
    if '@version@' in filedata:
        filedata = filedata.replace('@version@', ver)
    if '.' in ver:
        major_version, minor_version = ver.split('.')[0:2]
    else:
        major_version = ver
        minor_version = '0'
    if '@major_version@' in filedata:
        filedata = filedata.replace('@major_version@', major_version)
    if '@minor_version@' in filedata:
        filedata = filedata.replace('@minor_version@', minor_version)
    # Write the file out again
    with open(f, 'w') as fd:
        fd.write(filedata)


version = get_version()
print("version: ", version)

COPYRIGHT = 'Copyright 2012-2017 Fondazione Ugo Bordoni'
APP_MIST = ['mist/mist_main.py']
APP_NAME_MIST = 'Mist'
DATA_FILES_MIST = ['mist/mist_main.py']
OPTIONS_MIST = {'argv_emulation': True,
                # 'plist': 'Info_mist.plist',
                'plist': {
                    'CFBundlePackageType': 'APPL',
                    'CFBundleName': APP_NAME_MIST,
                    'CFBundleDisplayName': APP_NAME_MIST,
                    'CFBundleIdentifier': 'it.fub.mist',
                    'CFBundleVersion': version,
                    'CFBundleShortVersionString': version,
                    'NSHumanReadableCopyright': COPYRIGHT,
                    'CFBundleIconFile': 'icons/mist.icns'
                },
                'resources': 'mist/resources/icons',
                'iconfile': 'icons/mist.icns',
                'semi_standalone': False,
                }

APP_EXECUTER = ['nemesys/executer.py']
APP_NAME_EXECUTER = 'executer'
DATA_FILES = ['nemesys/executer.py']
OPTIONS_EXECUTER = {'argv_emulation': True,
                    # 'plist': 'Info_executer.plist',
                    'plist': {
                        'CFBundlePackageType': 'APPL',
                        'CFBundleName': APP_NAME_EXECUTER,
                        'CFBundleDisplayName': APP_NAME_EXECUTER,
                        'CFBundleIdentifier': 'it.fub.nemesys.executer',
                        'CFBundleVersion': version,
                        'CFBundleShortVersionString': version,
                        'NSHumanReadableCopyright': COPYRIGHT,
                        'CFBundleIconFile': 'icons/nemesys.icns'
                    },
                    'iconfile': 'icons/nemesys.icns',
                    'semi_standalone': False,
                    'extra_scripts': 'nemesys/login.py',
                    }

# Hitch hike on sys.argv to choose which target to build,
# then remove it to avoid errors in py2app
target = 'nemesys'
if len(sys.argv) >= 3:
    target = sys.argv[len(sys.argv) - 1]
    if target in ('mist', 'nemesys'):
        del sys.argv[len(sys.argv) - 1]

if target == 'mist':
    setup(
        app=APP_MIST,
        name='Mist',
        version='%s' % version,
        data_files=DATA_FILES_MIST,
        options={'py2app': OPTIONS_MIST},
        setup_requires=['py2app'],
    )
else:
    setup(
        app=APP_EXECUTER,
        data_files=DATA_FILES,
        options={'py2app': OPTIONS_EXECUTER},
        setup_requires=['py2app'],
    )
